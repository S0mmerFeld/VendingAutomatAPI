@page "/editServiceman/{id:int}"
@using Blazor.Client.Services.Interfaces
@using Blazor.Client.BlazorDTOs
@inject HttpClient Http
@inject IBlazorServiceMenService BlazorServiceMenService
@inject NavigationManager NavigationManager

<h3>EditServiceMan</h3>


<EditForm Model="@serviceman" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>

    <div class="form-group">
        <label for="Name" class="form-label">Name</label>
        <InputText Name="Name" @bind-Value="@serviceman.Name" class="form-control"></InputText>
        <ValidationMessage For="@(()=>serviceman.Name)"></ValidationMessage>
    </div>

    <div class="form-group">
        <label for="Name" class="form-label">Surname</label>
        <InputText Name="Name" @bind-Value="@serviceman.Surname" class="form-control"></InputText>
        <ValidationMessage For="@(()=>serviceman.Surname)"></ValidationMessage>
    </div>


    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>




@code {
    [Parameter]
    public int Id { get; set; }
    BlazorServiceManDTO serviceman = new BlazorServiceManDTO();

    async Task HandleValidSubmit()
    {
        var result = await BlazorServiceMenService.UpdateServiceMan(Id, serviceman);
        if (result) NavigationManager.NavigateTo($"/serviceman/{Id}");
    }

    protected override async Task OnInitializedAsync()
    {
        serviceman = await BlazorServiceMenService.GetServiceManById(Id);
    }

}
