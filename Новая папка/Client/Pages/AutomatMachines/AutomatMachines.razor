@page "/automatMachines"
@using Blazor.Client.Services.Interfaces
@using Blazor.Client.BlazorDTOs
@inject HttpClient Http
@inject IBlazorAutomatMachineService BlazorAutomatMachineService
@inject IBlazorSoldsService BlazorSoldsService
@inject NavigationManager NavigationManager



<MudGrid>
    <MudItem xs="6" sm="1">
    </MudItem>
    <MudItem xs="6" sm="3">
    </MudItem>
    <MudItem xs="6" sm="6">
        <h1>Automat Machines</h1>
    </MudItem>
    <MudItem xs="6" sm="1">
    </MudItem>
    <MudItem xs="6" sm="1">
        <MudIconButton Icon="@Icons.Material.Filled.AddCircle" Color="Color.Error" Title="Add" @onclick="@CreateAutomatMachine" Size="Size.Large" />
    </MudItem>

</MudGrid>


@if (!automatMachines.Any())
{
    <MudProgressCircular Color="Color.Default" Style="height:70px;width:70px;" Indeterminate="true" />
}

else

{
    <MudTable Items="@automatMachines" Hover="true" Filter="new Func<BlazorAutomatMachineDTO,bool>(FilterFunc1)">
        <ToolBarContent>
            <MudText Typo="Typo.h6">List of Automats</MudText>
            <MudSpacer />
            <MudTextField @bind-Value="@searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>

        <HeaderContent>
            <MudTh>Id</MudTh>
            <MudTh>InventoryId</MudTh>
            <MudTh>Name</MudTh>
            <MudTh>Address</MudTh>
            <MudTh>MaxProductNum</MudTh>
            <MudTh>CurrentProdNumber</MudTh>
        </HeaderContent>

        <RowTemplate>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Id">@context.InventoryId</MudTd>
            <MudTd DataLabel="Name" @onclick="@(() => ShowAutomatMachine(@context.Id))"><u>@context.Name</u> </MudTd>
            <MudTd DataLabel="Address">@context.Address</MudTd>
            <MudTd DataLabel="MaxProductNum">@context.MaxProductNum</MudTd>
            <MudTd DataLabel="CurrentProdNumber">@context.CurrentProdNumber</MudTd>
            <MudTd DataLabel="InventoryId">@context.InventoryId</MudTd>




        </RowTemplate>
    </MudTable>



}



@code
    {



    private IEnumerable<BlazorAutomatMachineDTO> automatMachines = new List<BlazorAutomatMachineDTO>();
    private string searchString1 = "";


    protected override async Task OnInitializedAsync()
    {
        automatMachines = await BlazorAutomatMachineService.GetAutomatMachines();


    }


    private bool FilterFunc1(BlazorAutomatMachineDTO element) => FilterFunc(element, searchString1);

    private bool FilterFunc(BlazorAutomatMachineDTO element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Address.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.Address} {element.Name}".Contains(searchString))
            return true;
        return false;

    }


    void ShowAutomatMachine(int id)
    {
        NavigationManager.NavigateTo($"/automatmachine/{id}");
    }

    void CreateAutomatMachine()
    {
        NavigationManager.NavigateTo("/createautomatmachine");
    }

}
