@page "/DiscountCard/{id:int}"
@using Automat.Client.Services.Interfaces
@using Automat.Client.BlazorDTOs
@inject HttpClient Http
@inject IBlazorDiscountCardsService BlazorDiscountCardsService
@inject NavigationManager NavigationManager

<h3>DiscountCard</h3>

@if (discountCard == null)
{
    <span><em>Loading...</em></span> }

else
{

    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>PurchaseSum</th>
                <th>Discount</th>
            </tr>
        </thead>
        <tbody>
            <tr>

                <td>@discountCard.Id</td>
                <td>@discountCard.PurchaseSum</td>
                <td>@discountCard.Discount</td>
            </tr>
        </tbody>
    </table>

    <button class="btn btn-success" @onclick="@(()=>EditDiscountCard(discountCard.Id))">Edit</button>
    <button class="btn btn-danger" @onclick="@(()=> DeleteDiscountCard(discountCard.Id))">Delete</button>
}



@code
{ [Parameter]
    public int Id { get; set; }

    BlazorDiscountCardDTO discountCard;

    protected override async Task OnInitializedAsync()
    {
        discountCard = await BlazorDiscountCardsService.GetDiscountCardById(Id);

    }

    void EditDiscountCard(int id)
    {
        NavigationManager.NavigateTo($"/editDiscountCard/{id}");
    }

    async Task DeleteDiscountCard(int id)
    {
        var result = await BlazorDiscountCardsService.DeleteDiscountCard(id);
        if (result) NavigationManager.NavigateTo($"/DiscountCards");
    }

    void ShowClient(int? id)
    {
        NavigationManager.NavigateTo($"/DiscountCard/{id}");
    }
}

