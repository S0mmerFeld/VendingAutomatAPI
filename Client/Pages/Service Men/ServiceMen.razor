@page "/ServiceMen"
@using Blazor.Client.Services.Interfaces
@using Blazor.Client.BlazorDTOs
@inject HttpClient Http
@inject IBlazorServiceMenService BlazorServiceMenService
@inject NavigationManager NavigationManager


<MudGrid>
    <MudItem xs="6" sm="1">
    </MudItem>
    <MudItem xs="6" sm="3">
    </MudItem>
    <MudItem xs="6" sm="6">
        <h1>Service men</h1>
    </MudItem>
    <MudItem xs="6" sm="1">
    </MudItem>
    <MudItem xs="6" sm="1">
        <MudIconButton Icon="@Icons.Material.Filled.AddCircle" Color="Color.Error" Title="Add" @onclick="@CreateServiceMan" Size="Size.Large" />
    </MudItem>
</MudGrid>


@if (serviceMen == null)
{
<MudProgressCircular Color="Color.Default" Style="height:70px;width:70px;" Indeterminate="true" />
}

else
{

<MudTable Items="@serviceMen" Hover="true" Filter="new Func<BlazorServiceManDTO, bool>(FilterFunc1)">
    <ToolBarContent>
        <MudText Typo="Typo.h6">List of ServiceMen</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="@searchString1" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>

    <HeaderContent>
        <MudTh>Id</MudTh>
        <MudTh>Name</MudTh>
        <MudTh>Surname</MudTh>
    </HeaderContent>

    <RowTemplate>
        <MudTd DataLabel="Id" >@context.Id</MudTd>
        <MudTd DataLabel="Name"  @onclick="@(() => ShowServiceMan(@context.Id))"><u>@context.Name</u> </MudTd>
        <MudTd DataLabel="Address">@context.Surname</MudTd>
    </RowTemplate>
</MudTable>




                           
                           
}






@code { private IEnumerable<BlazorServiceManDTO> serviceMen = new List<BlazorServiceManDTO>();

    protected override async Task OnInitializedAsync()
    {
        serviceMen = await BlazorServiceMenService.GetServiceMen();
    }


    private string searchString1 = "";


    void ShowServiceMan(int id)
    {
        NavigationManager.NavigateTo($"/ServiceMan/{id}");
    }

    void CreateServiceMan()
    {
        NavigationManager.NavigateTo("/createServiceMan");
    }



    private bool FilterFunc1(BlazorServiceManDTO element) => FilterFunc(element, searchString1);

    private bool FilterFunc(BlazorServiceManDTO element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Surname.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.Name} {element.Surname}".Contains(searchString))
            return true;
        return false;

    }

    /*

         <td>
                                <button class="btn btn-link" @onclick="@(() => ShowServiceMan(serviceMan.Id))">
                                    @serviceMan.Name
                                </button>

                            </td>

        */
}
