@page "/ServiceMan/{id:int}"
@using Automat.Client.Services.Interfaces
@using Automat.Client.BlazorDTOs
@inject HttpClient Http
@inject IBlazorServiceMenService BlazorServiceMenService
@inject NavigationManager NavigationManager


<h3>ServiceMan</h3>

@if (serviceman == null)
{
    <span><em>Loading...</em></span> }

else
{

    <table class="table">
        <thead>
            <tr>
                <th>id</th>
                <th>Name</th>
                <th>Price</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>@serviceman.Id</td>
                <td>@serviceman.Name</td>
                <td>@serviceman.Surname</td>
            </tr>
        </tbody>
    </table>


    <button class="btn btn-success" @onclick="@(()=>EditServiceMan(serviceman.Id))">Edit</button>
    <button class="btn btn-danger" @onclick="@(()=> DeleteProduct(serviceman.Id))">Delete</button>
}






@code {

    [Parameter]
    public int Id { get; set; }

    BlazorServiceManDTO serviceman;

    protected override async Task OnInitializedAsync()
    {
        serviceman = await BlazorServiceMenService.GetServiceManById(Id);

    }

    void EditServiceMan(int id)
    {
        NavigationManager.NavigateTo($"/editServiceMan/{id}");
    }

    async Task DeleteProduct(int id)
    {
        var result = await BlazorServiceMenService.DeleteServiceMan(id);
        if (result) NavigationManager.NavigateTo($"/ServiceMen");
    }

    void ShowClient(int? id)
    {
        NavigationManager.NavigateTo($"/ServiceMan/{id}");
    }




}
