@page "/createautomatmachine"
@using Automat.Client.Services.Interfaces
@using Automat.Client.BlazorDTOs
@inject IBlazorAutomatMachineService  BlazorAutomatMachineService
@inject NavigationManager NavigationManager

<h3>Add new automat</h3>

<EditForm Model="@AutomatMachine" OnValidSubmit="@HandleValidSubmit">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    
    <div class="form-group">
        <label for="InventoryId" class="form-label">InventoryId</label>
        <InputNumber @bind-Value="@AutomatMachine.InventoryId" class="form-control" />
        <ValidationMessage For="@(()=>AutomatMachine.InventoryId)"></ValidationMessage>
    </div>

    <div class="form-group">
        <label for="Name" class="form-label">Name</label>
        <InputText Name="Name" @bind-Value="@AutomatMachine.Name" class="form-control"></InputText>
        <ValidationMessage For="@(()=>AutomatMachine.Name)"></ValidationMessage>
    </div>

    <div class="form-group">
        <label for="Address" class="form-label">Address</label>
        <InputText Name="Address" @bind-Value="@AutomatMachine.Address" class="form-control"></InputText>
        <ValidationMessage For="@(()=>AutomatMachine.Address)"></ValidationMessage>
    </div>

    <div class="form-group">
        <label for="MaxProductNum" class="form-label">MaxProductNum</label>
        <InputNumber @bind-Value="@AutomatMachine.MaxProductNum" class="form-control" />
        <ValidationMessage For="@(()=>AutomatMachine.MaxProductNum)"></ValidationMessage>
    </div>

    <div class="form-group">
        <label for="CurrentProdNumber" class="form-label">CurrentProdNumber</label>
        <InputNumber @bind-Value="@AutomatMachine.CurrentProdNumber" class="form-control" />
        <ValidationMessage For="@(()=>AutomatMachine.CurrentProdNumber)"></ValidationMessage>
    </div>




    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code { 

    BlazorAutomatMachineDTO AutomatMachine = new BlazorAutomatMachineDTO();

    async Task HandleValidSubmit()
    {
        var result = await BlazorAutomatMachineService.CreateAutomatMachine(AutomatMachine);
        if (result)
        {
            NavigationManager.NavigateTo("/AutomatMachines");
        }
    }



}
